name: Restricted Branch Check

on:
  workflow_call:
    inputs:
      head_ref:
        description: 'PR head branch'
        required: true
        type: string
      head_repo:
        description: 'PR head repo'
        required: true
        type: string
      pr_number:
        description: 'PR number'
        required: true
        type: string
    secrets:
      JIRA_URL: { required: true }
      JIRA_USERNAME: { required: true }
      JIRA_API_TOKEN: { required: true }
    outputs:
      check_status:
        description: 'Status of the restricted branch check'
        value: ${{ jobs.restricted-branch-check.outputs.status }}

jobs:
  restricted-branch-check:
    name: Check Branch Restrictions
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    outputs:
      status: ${{ steps.final-status.outputs.status }}
    steps:
      - name: Checkout build-tools repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          repository: couchbase/build-tools
          ref: master
          path: build-tools
          fetch-depth: 1

      - name: Checkout manifest repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          repository: couchbase/manifest
          path: manifest
          fetch-depth: 1

      - name: Install uv
        uses: astral-sh/setup-uv@bd01e18f51369d5a26f1651c3cb451d3417e3bba
        with:
          version: latest

      - name: Run restriction checker
        id: branch-check
        env:
          GITHUB_BASE_REF: ${{ github.base_ref }}
          GITHUB_REPOSITORY: ${{ inputs.head_repo }}
          PR_NUMBER: ${{ inputs.pr_number }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JIRA_URL: ${{ secrets.JIRA_URL }}
          JIRA_USERNAME: ${{ secrets.JIRA_USERNAME }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
        run: |
          (cd build-tools/restriction && uv run restricted_branch_check.py && (echo "status=success" >> $GITHUB_OUTPUT)) || {
            echo "status=failure" >> $GITHUB_OUTPUT
            exit 1
          }

      - name: Set final status
        if: always()
        id: final-status
        run: |
          if [[ "${{ job.status }}" == "success" ]]; then
            echo "status=success" >> $GITHUB_OUTPUT
          else
            echo "status=failure" >> $GITHUB_OUTPUT
          fi

      - name: Generate summary
        if: always()
        run: |
          if [[ "${{ steps.final-status.outputs.status }}" == "failure" ]]; then
            echo "## ❌ Restricted Branch Check Failed" >> $GITHUB_STEP_SUMMARY
            echo "This PR cannot be merged until all the restricted branch requirements are met or the workflow is fixed." >> $GITHUB_STEP_SUMMARY
          else
            echo "## ✅ Restricted Branch Check Passed" >> $GITHUB_STEP_SUMMARY
            echo "All required approvals are in place for the target branch." >> $GITHUB_STEP_SUMMARY
          fi
